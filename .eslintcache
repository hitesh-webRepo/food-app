[{"D:\\Frontend\\foodapp\\src\\index.js":"1","D:\\Frontend\\foodapp\\src\\App.js":"2","D:\\Frontend\\foodapp\\src\\reportWebVitals.js":"3","D:\\Frontend\\foodapp\\src\\components\\LandingPage.js":"4","D:\\Frontend\\foodapp\\src\\components\\Homepage.js":"5","D:\\Frontend\\foodapp\\src\\data.js":"6","D:\\Frontend\\foodapp\\src\\components\\Overlay.js":"7","D:\\Frontend\\foodapp\\src\\DataContext.js":"8","D:\\Frontend\\foodapp\\src\\components\\SubMenuItems.js":"9","D:\\Frontend\\foodapp\\src\\components\\Footer.js":"10","D:\\Frontend\\foodapp\\src\\firebase\\config.js":"11","D:\\Frontend\\foodapp\\src\\firebase\\useFirestore.js":"12","D:\\Frontend\\foodapp\\src\\components\\Nav.js":"13","D:\\Frontend\\foodapp\\src\\components\\Cart.js":"14","D:\\Frontend\\foodapp\\src\\components\\Offers.js":"15","D:\\Frontend\\foodapp\\src\\components\\Signup.js":"16"},{"size":485,"mtime":1609909533639,"results":"17","hashOfConfig":"18"},{"size":3767,"mtime":1611733998707,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":3069,"mtime":1611733772429,"results":"21","hashOfConfig":"18"},{"size":5867,"mtime":1611727429098,"results":"22","hashOfConfig":"18"},{"size":1268,"mtime":1610035097840,"results":"23","hashOfConfig":"18"},{"size":173,"mtime":1609856272882,"results":"24","hashOfConfig":"18"},{"size":109,"mtime":1609909610609,"results":"25","hashOfConfig":"18"},{"size":2542,"mtime":1610109499616,"results":"26","hashOfConfig":"18"},{"size":1704,"mtime":1610001306237,"results":"27","hashOfConfig":"18"},{"size":669,"mtime":1611733746346,"results":"28","hashOfConfig":"18"},{"size":570,"mtime":1610280215698,"results":"29","hashOfConfig":"18"},{"size":3498,"mtime":1611734508380,"results":"30","hashOfConfig":"18"},{"size":7288,"mtime":1611212531291,"results":"31","hashOfConfig":"18"},{"size":1599,"mtime":1611212583645,"results":"32","hashOfConfig":"18"},{"size":6002,"mtime":1611734054940,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"f7ir01",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Frontend\\foodapp\\src\\index.js",[],["70","71"],"D:\\Frontend\\foodapp\\src\\App.js",[],"D:\\Frontend\\foodapp\\src\\reportWebVitals.js",[],"D:\\Frontend\\foodapp\\src\\components\\LandingPage.js",[],"D:\\Frontend\\foodapp\\src\\components\\Homepage.js",["72"],"import React,{useEffect,useContext,useState} from 'react'\r\nimport DataContext from '../DataContext'\r\nimport { motion} from \"framer-motion\";\r\nimport Delivery from \"../assets/delivery.svg\"\r\nimport useFirestore from \"../firebase/useFirestore\"\r\nimport SubMenuItems from \"./SubMenuItems\"\r\nimport Footer from './Footer';\r\n\r\nexport default function Homepage({dispatch,cart}) {\r\n\r\n    const [isMenuOpen,setIsMenuOpen] = useState(false)\r\n    const [currentCategory,setCurrentCategory] =  useState(\"\")\r\n    const [currentMenuItem,setCurrentMenuItem] =  useState([])\r\n    const [popularItems] = useState([\"4MVcMDuBk9UHE1gKmPYP\",\"T2kJy9BXRG9SHTrvndfs\",\"fE2A2ZC9fhZRRf89iq0R\",\"CBzonQXWX8a5A7w2vhWn\",\"x9mRKsRTeywXXA6KtehA\"]);\r\n\r\n\r\n    const {docs} =  useFirestore(\"products\"); //all the products available \r\n\r\n    // selecting the current category when user click the menu card\r\n    useEffect(()=>{\r\n        const items = docs.filter(doc => doc.category === currentCategory)\r\n        setCurrentMenuItem(items)\r\n    },[currentCategory])\r\n\r\n    const allData =  useContext(DataContext)\r\n\r\n    //when user click on the special menu card it open then sub menu \r\n    const onMenuClick = (title) =>{\r\n        setIsMenuOpen(true)\r\n        setCurrentCategory(title)\r\n    }\r\n\r\n\r\n    const container = {\r\n        hidden: { opacity: 1, scale: 0 },\r\n        visible: {\r\n          opacity: 1,\r\n          scale: 1,\r\n          transition: {\r\n            delayChildren: 0.3,\r\n            staggerChildren: 0.2\r\n          }\r\n        }\r\n      }\r\n\r\n    const item = {\r\n    hidden: { x: 20, opacity: 0 },\r\n    visible: {\r\n    x: 0,\r\n    opacity: 1\r\n    }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"home-page\">\r\n            {/* special items */}\r\n            <div className=\"carousel-header\">\r\n                <h2 className=\"title-text\">Special Menu</h2>\r\n            </div>\r\n            <motion.div className=\"card-container\" \r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={container}\r\n            >\r\n            {\r\n                    allData.specialMenu.map((menuItem,idx)=>{\r\n                        return(\r\n                            <motion.div className={`card ${menuItem.colorScheme}`} \r\n                            key={idx}\r\n                            initial=\"hidden\"\r\n                            animate=\"visible\"\r\n                            variants={container}\r\n                            onClick={()=>onMenuClick(menuItem.title)}\r\n                            >\r\n                            <motion.img src={menuItem.image} alt={menuItem.title} />\r\n                            <h3 className=\"normal-text\">{menuItem.title}</h3>\r\n                            </motion.div>\r\n                        )\r\n                    })\r\n                }  \r\n            </motion.div>\r\n            \r\n            <div className=\"carousel-header\">\r\n                <h2 className=\"title-text\">Most Popular Items</h2>\r\n            </div>\r\n            \r\n\r\n            \r\n                <motion.div className=\"card-container\" \r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  variants={container}\r\n                >\r\n                \r\n                {\r\n                docs.filter(doc=>popularItems.includes(doc.id)).map(card=>(\r\n                        \r\n                <motion.div className=\"cart-card\"\r\n                key={card.id}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                variants={container}\r\n                >\r\n                <motion.div className=\"hero\"\r\n                variants={item}\r\n                >\r\n                 <img src={card.image} alt={card.name}/>\r\n                </motion.div>\r\n\r\n                <motion.div className=\"text-container\" \r\n                variants={item}\r\n                >\r\n                <h3 className=\"normal-text\">{card.name}</h3>\r\n                <p className=\"light-text\">by {card.chef}</p>\r\n                <h3 className=\"normal-text\"><i className=\"fas fa-rupee-sign\"></i> {card.price}</h3>\r\n                </motion.div>\r\n                <motion.div className=\"cart-button\" \r\n                variants={item}\r\n                >\r\n                {\r\n                cart.find(item=>item.item_id===card.id) ? \r\n                <button className=\"red-button\" onClick={e=>dispatch({type:\"REMOVE\",payload:card.id})}>\r\n                Remove from Cart\r\n                </button>\r\n                :\r\n                <button className=\"red-button\" onClick={e=>dispatch({type:\"ADD\",payload:{item_id:card.id,quantity:1}})}>\r\n                    Add to Cart\r\n                </button>\r\n                }\r\n                </motion.div>\r\n                </motion.div>   \r\n                ))\r\n                }     \r\n                </motion.div>\r\n\r\n                <div className=\"flex-container\">\r\n                    <div className=\"text-container\">\r\n                    <h2 className=\"normal-text\">\r\n                    Delivering Your Favourite Food In <span className=\"green-text\">30 Minutes.</span>\r\n                    </h2>\r\n                    <p className=\"light-text\">It is a long established fact that a reader will be distracted by the readable content of page when looking at the layout.</p>\r\n                    </div>\r\n                    <div className=\"image-container\">\r\n                        <img src={Delivery} alt=\"delivery\"/>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isMenuOpen && \r\n                    <SubMenuItems \r\n                    data={currentMenuItem} \r\n                    status={setIsMenuOpen} \r\n                    title={currentCategory}\r\n                    dispatch={dispatch}\r\n                    cart={cart}\r\n                    />\r\n                }\r\n            </div>\r\n            <Footer/>\r\n            </>\r\n\r\n    )\r\n}\r\n","D:\\Frontend\\foodapp\\src\\data.js",[],"D:\\Frontend\\foodapp\\src\\components\\Overlay.js",[],"D:\\Frontend\\foodapp\\src\\DataContext.js",[],"D:\\Frontend\\foodapp\\src\\components\\SubMenuItems.js",[],"D:\\Frontend\\foodapp\\src\\components\\Footer.js",[],"D:\\Frontend\\foodapp\\src\\firebase\\config.js",[],"D:\\Frontend\\foodapp\\src\\firebase\\useFirestore.js",["73"],"import {useState,useEffect} from \"react\"\r\nimport {projectFirestore} from \"./config\"\r\n\r\nconst useFirestore = (collection)=>{\r\n    const [docs,setDocs] = useState([])\r\n    \r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n        .onSnapshot((snap)=>{\r\n          let documents = [];\r\n          snap.forEach(doc =>{\r\n            documents.push({...doc.data(),id:doc.id})\r\n          });\r\n          setDocs(documents)\r\n        });\r\n\r\n        return () => unsub();\r\n       }, [])\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;\r\n","D:\\Frontend\\foodapp\\src\\components\\Nav.js",[],"D:\\Frontend\\foodapp\\src\\components\\Cart.js",["74","75","76"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport useFirestore from '../firebase/useFirestore'\r\nimport Footer from \"./Footer\"\r\n\r\nexport default function Cart({cart,dispatch,promo}) {\r\n\r\n    const [loading,setLoading] = useState(false);\r\n    const {docs} =  useFirestore(\"products\");\r\n    const [currentCartData,setCurrentCartData] =  useState([]);\r\n    const [itemtotal,setItemTotal] =  useState(0);\r\n    const [coupon,setCoupon] = useState(null);\r\n    //getting width of the device user using\r\n    const width =  window.innerWidth;\r\n    \r\n    const cartItems = ()=>{\r\n        const myArrayFiltered = docs.filter(array => cart.some(filter => filter.item_id === array.id));\r\n        return myArrayFiltered;\r\n    }\r\n\r\n    const getQuantity =  (itemId)=>{\r\n        const quantity =  cart.find(({item_id})=>item_id === itemId);\r\n        if(quantity)\r\n        return quantity.quantity;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setCurrentCartData(cartItems())\r\n    }, [docs,cart])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(currentCartData.length>0){\r\n            setLoading(false)\r\n            itemTotal()\r\n        }\r\n    }, [currentCartData])\r\n\r\n    useEffect(() => {\r\n     couponValue()\r\n    }, [promo,itemtotal])\r\n\r\n\r\n    //total price of items without the coupon\r\n    const itemTotal  = () =>{\r\n        let sum = 0;\r\n        currentCartData.forEach(({id,price})=>{\r\n            sum =  sum + parseInt(price*getQuantity(id));\r\n        })\r\n        setItemTotal(sum);\r\n    }\r\n\r\n\r\n    //setting the coupon value\r\n    const couponValue = ()=>{\r\n        let coupon;\r\n        const {value,isPercentage} =  promo;\r\n        if(isPercentage)\r\n        coupon =  itemtotal*(value/100)\r\n        else\r\n        coupon = value;\r\n\r\n        setCoupon(coupon)\r\n    }\r\n\r\n  \r\n    return (\r\n        <>\r\n        <div className=\"cart-page\">\r\n            <header>\r\n                <h2 className=\"normal-text\">{!loading ? \"Your favourite food is just few clicks away\" : \"Looks like your cart is empty\"}</h2>\r\n            </header>\r\n            <main>\r\n            {\r\n                loading ? \r\n                <>\r\n                <header className=\"add-more-items\">\r\n                <Link to=\"/\">Add items</Link>\r\n                </header>\r\n                </> :\r\n\r\n            <section className=\"products\">\r\n            {\r\n                currentCartData.map(({id,name,price,isVeg,chef,image})=>(\r\n                    //list of the items in cart\r\n                    <div className=\"card\" key={id}>\r\n\r\n                        <div className=\"hero\">\r\n                            <img src={image} alt={name}/>\r\n                        </div>\r\n\r\n                        <div className=\"description\">\r\n                            <div className=\"item-type\">\r\n                            <h4 className=\"normal-text\">{name}</h4>\r\n                            {\r\n                                isVeg ?\r\n                                <span className=\"square veg\">\r\n                                    <span className=\"circle\"></span>\r\n                                </span>:\r\n                                <span className=\"square non-veg\">\r\n                                    <span className=\"circle\"></span>\r\n                                </span>\r\n                            }\r\n                            </div>\r\n                            <p className=\"light-text\">by {chef}</p>\r\n                        </div>\r\n                        \r\n                        <div className=\"right-card-section\">\r\n                            <div className=\"change-quantity\">\r\n                            <button \r\n                            onClick={()=>{\r\n                                const currentQuantity  =  getQuantity(id);\r\n                                //restricting the quantity from getting negative\r\n                                if(currentQuantity === 1)\r\n                                dispatch({type:\"REMOVE\",payload:id})\r\n                                else\r\n                                dispatch({type:\"SETQUANTITY\",payload:{item_id:id,quantity:parseInt(currentQuantity - 1)}})\r\n                            }}>\r\n                            <i className=\"fas fa-minus\"></i>\r\n                            </button>\r\n                            <p className=\"normal-text\"> {getQuantity(id)} </p>\r\n                            <button onClick={()=>dispatch({type:\"SETQUANTITY\",payload:{item_id:id,quantity:parseInt(getQuantity(id) + 1)}})}>\r\n                            <i className=\"fas fa-plus\"></i>\r\n                            </button>\r\n                            </div>\r\n                            <div className=\"price normal-text\">\r\n                            <div> &#x20B9; </div>\r\n                            <p> {price * getQuantity(id)}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n            {\r\n            currentCartData.length < 4 &&\r\n            <div className=\"add-more-items\">\r\n            <Link to=\"/\">Add more items</Link>\r\n            </div>}\r\n            </section>\r\n            }\r\n            <section className=\"price-description\">\r\n            <div className=\"coupon\">\r\n                <label htmlFor=\"coupoun\">Offers</label>\r\n                <form>\r\n                {promo ? \r\n                <p>\r\n                Promo selected : <b>{promo.code}</b>\r\n                </p>\r\n                : \r\n                <p>\r\n                Select the promo\r\n                </p>\r\n                }\r\n                <Link to=\"/offers\">View</Link>\r\n                </form>\r\n            </div>\r\n            <table className=\"cart-total\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            Items Total\r\n                        </td>\r\n                        <td>\r\n                            &#x20B9; {itemtotal}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>\r\n                            Delivery\r\n                        </td>\r\n                        <td>\r\n                            Free Delivery\r\n                        </td>\r\n                    </tr>\r\n                    {\r\n                    coupon &&\r\n                    <tr>\r\n                        <td>\r\n                            Discount\r\n                        </td>\r\n                    <td>\r\n                        - &#x20B9; {coupon} \r\n                    </td>\r\n                    </tr>}\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <b>Grand Total</b>\r\n                        </td>\r\n                    <td>\r\n                        <b>\r\n                        &#x20B9; { coupon ? itemtotal - coupon : itemtotal}\r\n                        </b>\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div className=\"place-order\">\r\n                <button>\r\n                    Place Order\r\n                </button>\r\n            </div>\r\n            </section>\r\n            </main>\r\n        </div>\r\n        {\r\n            width > 600 && <Footer/>\r\n        }\r\n\r\n        </>\r\n        \r\n    )\r\n}\r\n","D:\\Frontend\\foodapp\\src\\components\\Offers.js",[],"D:\\Frontend\\foodapp\\src\\components\\Signup.js",["77","78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":23,"column":7,"nodeType":"86","endLine":23,"endColumn":24,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":18,"column":11,"nodeType":"86","endLine":18,"endColumn":13,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":34,"column":8,"nodeType":"86","endLine":34,"endColumn":19,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":42,"column":8,"nodeType":"86","endLine":42,"endColumn":25,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"94","line":46,"column":8,"nodeType":"86","endLine":46,"endColumn":25,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":8,"column":12,"nodeType":"98","messageId":"99","endLine":8,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":8,"column":26,"nodeType":"98","messageId":"99","endLine":8,"endColumn":42},{"ruleId":"84","severity":1,"message":"101","line":19,"column":7,"nodeType":"86","endLine":19,"endColumn":33,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'docs'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'collection'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'cartItems'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'itemTotal'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'couponValue'. Either include it or remove the dependency array.",["109"],"no-unused-vars","'passwordError' is assigned a value but never used.","Identifier","unusedVar","'setPasswordError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkConfirmPassword'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [currentCategory, docs]",{"range":"123","text":"124"},"Update the dependencies array to be: [collection]",{"range":"125","text":"126"},"Update the dependencies array to be: [docs, cart, cartItems]",{"range":"127","text":"128"},"Update the dependencies array to be: [currentCartData, itemTotal]",{"range":"129","text":"130"},"Update the dependencies array to be: [promo, itemtotal, couponValue]",{"range":"131","text":"132"},"Update the dependencies array to be: [checkConfirmPassword, confirmPassword, password]",{"range":"133","text":"134"},[1003,1020],"[currentCategory, docs]",[508,510],"[collection]",[1045,1056],"[docs, cart, cartItems]",[1207,1224],"[currentCartData, itemTotal]",[1279,1296],"[promo, itemtotal, couponValue]",[721,747],"[checkConfirmPassword, confirmPassword, password]"]